{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.styled.jsx","services/fetch-api.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/App/App.js","index.js"],"names":["Header","styled","header","SearchForm","form","SearchFormButton","button","SearchFormLabel","span","Input","input","Searchbar","onSubmit","useState","search","setSearch","evt","preventDefault","trim","toast","info","icon","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","className","value","autocomplete","onChange","currentTarget","toLowerCase","autoFocus","placeholder","Item","li","ItemImage","img","ImageGalleryItem","webformatURL","largeImage","onClick","alt","src","Wrapper","div","Spinner","marginRight","marginLeft","color","height","width","List","ul","ImageGallery","status","gallery","spinner","toggleModal","map","largeImageURL","tags","uuidv4","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","console","log","Container","apiFetch","fetchApi","currentSearch","currentPage","fetch","then","res","ok","json","Promise","reject","Error","LoadMoreButton","Button","pages","scroll","scrollToBottom","App","showModal","setShowModal","photo","setPhoto","totalHits","setTotalHits","images","setImages","page","setPage","setStatus","setSpinner","hits","length","error","theme","catch","autoClose","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAEaA,EAASC,IAAOC,OAAV,qcAkBNC,EAAaF,IAAOG,KAAV,kLASVC,EAAmBJ,IAAOK,OAAV,saAmBhBC,EAAkBN,IAAOO,KAAV,iNAYfC,EAAQR,IAAOS,MAAV,gQ,OChDH,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KA4BA,OACE,cAACf,EAAD,UACE,eAACG,EAAD,CAAYS,SAzBK,SAAAI,GAGnB,GAFAA,EAAIC,iBAEkB,KAAlBH,EAAOI,OAAe,CAaxB,OAXEC,IAAMC,KAAK,gCAAiC,CAC1CC,MAAM,EACNC,SAAU,aACVC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,SAGdb,EAAU,IAIZH,EAASE,GACTC,EAAU,KAKR,UACE,cAACV,EAAD,CAAkBwB,KAAK,SAAS,aAAW,SAA3C,SACE,cAACtB,EAAD,uBAGF,cAACE,EAAD,CACEqB,UAAU,mBACVD,KAAK,OACLE,MAAOjB,EACPkB,aAAa,MACbC,SAtCmB,SAAAjB,GACzBD,EAAUC,EAAIkB,cAAcH,MAAMI,gBAsC5BC,WAAS,EACTC,YAAY,kC,0BCrDTC,EAAOrC,IAAOsC,GAAV,sLAMJC,EAAYvC,IAAOwC,IAAV,uNCQPC,EAZU,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,IAAtC,OACvB,cAACR,EAAD,CAAMO,QAAS,kBAAMA,EAAQD,IAA7B,SACE,cAACJ,EAAD,CAAWO,IAAKJ,EAAcG,IAAKA,O,iBCJ1BE,G,MAAU/C,IAAOgD,IAAV,oDCgBLC,EAbC,kBACd,cAACF,EAAD,UACE,cAAC,IAAD,CACEnB,KAAK,YACLsB,YAAY,OACZC,WAAW,OACXC,MAAM,UACNC,OAAQ,GACRC,MAAO,QCRAC,GAJUvD,IAAOgD,IAAV,mDAIAhD,IAAOwD,GAAV,8RCIF,SAASC,EAAT,GAA8D,IAAtCb,EAAqC,EAArCA,QAASc,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACzDC,EAAc,SAAAlB,GAClBC,EAAQD,IAGV,MAAe,SAAXe,EACK,wBAEM,YAAXA,EACK,cAAC,EAAD,CAAS9B,KAAK,YAAYwB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAEvD,aAAXI,EAEA,eAACX,EAAD,WACE,cAACQ,EAAD,CAAM1B,UAAU,eAAhB,SACG8B,EAAQG,KAAI,gBAAGpB,EAAH,EAAGA,aAAcqB,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,KAAhC,OACX,cAAC,EAAD,CAEEtB,aAAcA,EACdC,WAAYoB,EACZnB,QAASiB,EACThB,IAAKmB,GAJAC,oBAQVL,GACC,cAAC,EAAD,CAAShC,KAAK,YAAYwB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAKtD,aAAXI,EACK,6BADT,ECtCK,I,EAAMQ,EAAUlE,IAAOgD,IAAV,2OAaPmB,EAAcnE,IAAOgD,IAAV,iGCVlBoB,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACxCC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAAA9D,GACH,WAAbA,EAAIgE,MACNN,KAWJ,OAAOO,uBACL,cAACd,EAAD,CAAStB,QARiB,SAAA7B,GACtBA,EAAIkE,SAAWlE,EAAIkB,gBACrBiD,QAAQC,IAAIf,EAAZ,QACAK,MAKF,SACE,cAACN,EAAD,UAAcK,MAEhBJ,GC9BG,IAAMgB,EAAYpF,IAAOgD,IAAV,yHCWtB,I,EACeqC,EADE,CAAEC,SAXnB,SAAkBC,EAAeC,GAC/B,OAAOC,MAAM,gCAAD,OAHF,qCAGE,cAC+BF,EAD/B,qEACyGC,IACnHE,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAJ,8BAAiCT,U,QCR9CU,EAAiBjG,IAAOK,OAAV,qoBCEZ,SAAS6F,EAAT,GAA4B,IAAVC,EAAS,EAATA,MAM/B,OACE,cAACF,EAAD,CAAgBrE,KAAK,SAASgB,QANZ,WAClBuD,IACAC,gBAAOC,kBAIP,uBCCW,SAASC,IACtB,MAAkC1F,oBAAS,GAA3C,mBAAO2F,EAAP,KAAkBC,EAAlB,KACA,EAA4B5F,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,MAAnC,mBAAO6F,EAAP,KAAcC,EAAd,KACA,EAAkC9F,mBAAS,GAA3C,mBAAO+F,EAAP,KAAkBC,EAAlB,KACA,EAA4BhG,mBAAS,IAArC,mBAAOiG,EAAP,KAAeC,EAAf,KACA,EAAwBlG,mBAAS,GAAjC,mBAAOmG,EAAP,KAAaC,EAAb,KACA,EAA4BpG,mBAAS,QAArC,mBAAO8C,EAAP,KAAeuD,EAAf,KACA,EAA8BrG,oBAAS,GAAvC,mBAAOgD,EAAP,KAAgBsD,EAAhB,KAEAxC,qBAAU,WACH7D,GAELwE,EACGC,SAASzE,EAAQkG,GACjBrB,MAAK,SAAA/B,GAEJ,GADAuB,QAAQC,IAAIxB,EAAZ,aAC4B,IAAxBA,EAAQwD,KAAKC,OAAc,CAe7B,OAHAH,EAAU,YACVL,EAAajD,EAAQwD,KAAKC,aAXxBlG,IAAMmG,MAAN,8BAAmCxG,GAAU,CAC3CQ,SAAU,aACVC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACV2F,MAAO,SASbJ,GAAW,GACXJ,GAAU,SAAAD,GAAM,4BAAQlD,EAAQwD,MAAhB,YAAyBN,OACzCI,EAAU,YACVL,EAAajD,EAAQwD,KAAKC,WAE3BG,OAAM,SAAAF,GAAK,OAAIJ,EAAU,iBAC3B,CAACpG,EAAQkG,IAEZ,IAKMlD,EAAc,SAAA4C,GAClBC,EAASD,GACTD,GAAcD,IAShB,OACE,eAACnB,EAAD,WACE,cAAC1E,EAAD,CAAWC,SATU,SAAAE,GACvBC,EAAUD,GACViG,EAAU,IACVE,EAAQ,GACRC,EAAU,cAMR,cAACxD,EAAD,CACEE,QAASkD,EACTjE,QAASiB,EACTH,OAAQA,EACRE,QAASA,IAEI,KAAd+C,GAAoB,cAACT,EAAD,CAAQC,MAzBZ,WACnBa,EAAQD,EAAO,GACfG,GAAW,MAwBRX,GACC,cAAChC,EAAD,CAAOE,QAASZ,EAAhB,SACE,qBAAKf,IAAK2D,EAAO5D,IAAI,OAGzB,cAAC,IAAD,CACExB,SAAS,aACTmG,UAAW,IACXlG,iBAAiB,EACjBmG,aAAa,EACblG,cAAY,EACZmG,KAAK,EACLC,kBAAgB,EAChBlG,WAAS,EACTD,cAAY,EACZJ,MAAM,OC3FdwG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFjC,SAAS0D,eAAe,W","file":"static/js/main.e494ce7b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  Input,\n} from './Searchbar.styled';\n\nexport default function Searchbar({ onSubmit }) {\n  const [search, setSearch] = useState('');\n\n  const handleSearchChange = evt => {\n    setSearch(evt.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (search.trim() === '') {\n      const notifyInfo = () =>\n        toast.info('Please, enter search criteria', {\n          icon: false,\n          position: 'top-center',\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      notifyInfo();\n      setSearch('');\n      return;\n    }\n\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <Header>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\" aria-label=\"Search\">\n          <SearchFormLabel>Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <Input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={search}\n          autocomplete=\"off\"\n          onChange={handleSearchChange}\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </SearchForm>\n    </Header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, ItemImage } from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ webformatURL, largeImage, onClick, alt }) => (\n  <Item onClick={() => onClick(largeImage)}>\n    <ItemImage src={webformatURL} alt={alt} />\n  </Item>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Wrapper } from './Loader.styled';\n\nconst Spinner = () => (\n  <Wrapper>\n    <Loader\n      type=\"ThreeDots\"\n      marginRight=\"auto\"\n      marginLeft=\"auto\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n    />\n  </Wrapper>\n);\n\nexport default Spinner;\n","import styled from '@emotion/styled';\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 300px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Spinner from '../Loader';\nimport { List } from './ImageGallery.styled';\nimport { Wrapper } from '../Loader/Loader.styled';\n\nexport default function ImageGallery({ onClick, status, gallery, spinner }) {\n  const toggleModal = largeImage => {\n    onClick(largeImage);\n  };\n\n  if (status === 'idle') {\n    return <div></div>;\n  }\n  if (status === 'pending') {\n    return <Spinner type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\n  }\n  if (status === 'resolved') {\n    return (\n      <Wrapper>\n        <List className=\"ImageGallery\">\n          {gallery.map(({ webformatURL, largeImageURL, tags }) => (\n            <ImageGalleryItem\n              key={uuidv4()}\n              webformatURL={webformatURL}\n              largeImage={largeImageURL}\n              onClick={toggleModal}\n              alt={tags}\n            />\n          ))}\n        </List>\n        {spinner && (\n          <Spinner type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n      </Wrapper>\n    );\n  }\n  if (status === 'rejected') {\n    return <div></div>;\n  }\n}\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.func.isRequired,\n  gallery: PropTypes.func.isRequired,\n  spinner: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ModalWindow, Overlay } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = evt => {\n    if (evt.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      console.log(modalRoot, `qqqq`);\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","const API = '22611129-58a3168a9d70d9c0808a9c973';\n\nfunction fetchApi(currentSearch, currentPage) {\n  return fetch(\n    `https://pixabay.com/api/?key=${API}&q=${currentSearch}&image_type=photo&orientation=horizontal&per_page=12&page=${currentPage}`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`No result with name ${currentSearch}`));\n  });\n}\nconst apiFetch = { fetchApi };\nexport default apiFetch;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  margin-top: 10px;\n  margin: 20 auto;\n\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { LoadMoreButton } from './Button.styled';\n\nexport default function Button({ pages }) {\n  const scrollToBtn = () => {\n    pages();\n    scroll.scrollToBottom();\n  };\n\n  return (\n    <LoadMoreButton type=\"button\" onClick={scrollToBtn}>\n      Load More\n    </LoadMoreButton>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal/Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Container } from './App.styled';\nimport apiFetch from '../../services/fetch-api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button/Button';\n\nexport default function App() {\n  const [showModal, setShowModal] = useState(false);\n  const [search, setSearch] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [totalHits, setTotalHits] = useState(0);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [spinner, setSpinner] = useState(false);\n\n  useEffect(() => {\n    if (!search) return;\n\n    apiFetch\n      .fetchApi(search, page)\n      .then(gallery => {\n        console.log(gallery, `gallery 1`);\n        if (gallery.hits.length === 0) {\n          const notify = () =>\n            toast.error(`No result with name ${search}`, {\n              position: 'top-center',\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              theme: 'dark',\n            });\n\n          setStatus('rejected');\n          setTotalHits(gallery.hits.length);\n          notify();\n          return;\n        }\n\n        setSpinner(false);\n        setImages(images => [...gallery.hits, ...images]);\n        setStatus('resolved');\n        setTotalHits(gallery.hits.length);\n      })\n      .catch(error => setStatus('rejected'));\n  }, [search, page]);\n\n  const handleButton = () => {\n    setPage(page + 1);\n    setSpinner(true);\n  };\n\n  const toggleModal = photo => {\n    setPhoto(photo);\n    setShowModal(!showModal);\n  };\n  const handleFormSubmit = search => {\n    setSearch(search);\n    setImages([]);\n    setPage(1);\n    setStatus('pending');\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      <ImageGallery\n        gallery={images}\n        onClick={toggleModal}\n        status={status}\n        spinner={spinner}\n      ></ImageGallery>\n      {totalHits === 12 && <Button pages={handleButton} />}\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={photo} alt=\"\" />\n        </Modal>\n      )}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        icon={false}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}